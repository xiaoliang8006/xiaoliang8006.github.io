---
layout: post
title:  "牛客网 剑指offer 栈的压入、弹出序列"

---
时间限制：1秒空间限制：32768K热度指数：10544

本题知识点：[栈](https://www.nowcoder.com/questionCenter?questionTypes=000100&mutiTagIds=581)

**算法知识视频讲解

## 题目描述

输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否为该栈的弹出顺序。假设压入栈的所有数字均不相等。例如序列1,2,3,4,5是某栈的压入顺序，序列4，5,3,2,1是该压栈序列对应的一个弹出序列，但4,3,5,1,2就不可能是该压栈序列的弹出序列。（注意：这两个序列的长度是相等的）





题解：首先定义一个栈，根据顺序来压入栈，每压入一次便与出栈序列比较，若顶部与当前出栈元素相同，则进行pop操作，index++,直到不相同，

当最后index==出栈数组的元素个数时，则说明遍历完成，返回true，否则返回false。



代码如下：

```c++
class Solution {
public:
    bool IsPopOrder(vector<int> pushV,vector<int> popV) {
        stack<int> s;int index=0;
        for(int i=0;i<pushV.size();++i){
            s.push(pushV[i]);  
            while(index<popV.size()&&s.top()==popV[index]){
                ++index;
                s.pop();
            }
        }
        if(index==popV.size()){
            return true;
        }else{
            return false;
        }
    }
};
```

