---
layout: post
title:  "牛客网 剑指offer 从上往下打印二叉树"

---
时间限制：1秒空间限制：32768K热度指数：10910

**算法知识视频讲解

## 题目描述

从上往下打印出二叉树的每个节点，同层节点从左至右打印。



利用队列，当当前结点不为空，push进入队列，然后在while循环中检测它的左孩子与右孩子是否存在，若存在则push进入队列，将每一个pop出来的结点的值放入vector，即为层次遍历的结果

代码如下：

```c++
/*
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
			val(x), left(NULL), right(NULL) {
	}
};*/
class Solution {
public:
    vector<int> PrintFromTopToBottom(TreeNode* root) {
        vector<int>v;
        if(root==NULL)return v;        
		queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()){
            TreeNode* temp=q.front();
            q.pop();
            v.push_back(temp->val);
            if(temp->left)q.push(temp->left);
            if(temp->right)q.push(temp->right);
        }
        return v;   
    }
};
```

